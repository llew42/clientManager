{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/clients/clients.component.ts","./src/app/components/clients/clients.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/client.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'ckfrontend';\n}\n","<navbar></navbar>\n<div class=\"container\">\n  <clients></clients>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { ClientService } from './services/client.service';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClientsComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ClientService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\n\n@Component({\n  selector: 'clients',\n  templateUrl: './clients.component.html',\n})\n\nexport class ClientsComponent implements OnInit {\n  clients;\n  _id;\n  firstName;\n  lastName;\n  email;\n  phone;\n  isEdit;\n  constructor(private clientService: ClientService){ }\n\n  ngOnInit(){\n    this.isEdit = false,\n    this.getClients();\n  }\n\n  getClients(): void {\n    this.clientService.getClients().subscribe(clients => {\n     this.clients = clients;\n    });\n  }\n\n  onAddSubmit(){\n    console.log('Submit clicked')\n    const newClient = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      phone: this.phone\n    }\n    this.clientService.saveClient(newClient).subscribe(client => {\n      this.clients.push(client);\n      this.firstName = '';\n      this.lastName = '';\n      this.email = '';\n      this.phone = '';\n    });\n  }\n\n  onEditSubmit(){\n    const updateClient = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      phone: this.phone,\n      _id: this._id\n    }\n\n    this.clientService.updateClient(updateClient).subscribe(client => {\n      console.log(\"The client is \", client);\n      for (let i = 0; i < this.clients.length; i++) {\n        if (updateClient._id === this.clients[i]._id) {\n          this.clients.splice(i, 1);\n        }\n      }\n      this.clients.push(client);\n      this.firstName = '';\n      this.lastName = '';\n      this.email = '';\n      this.phone = '';\n    });\n  }\n\n  onEdit(client){\n    this.isEdit = true;\n    this.firstName = client.firstName;\n    this.lastName = client.lastName;\n    this.email = client.email;\n    this.phone = client.phone;\n    this._id = client._id;\n  }\n\n  onDelete(id){\n    this.clientService.deleteClient(id).subscribe(client => {\n      for (let i = 0; i < this.clients.length; i ++) {\n        if (id === this.clients[i]._id){\n          this.clients.splice(i, 1);\n        }\n      }\n    })\n  }\n}\n","<div class=\"client-form\">\n  <div *ngIf=\"isEdit\">\n    <form (ngSubmit)=\"onEditSubmit()\" method=\"post\">\n      <h3>Edit Client</h3>\n      <div class=\"form-group list-group-item list-group-item-warning\">\n        <label for=\"firstName\">First Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"firstName\" name=\"firstName\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-warning\">\n        <label for=\"lastName\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"lastName\" name=\"lastName\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-warning\">\n        <label for=\"firstName\">Email</label>\n        <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-warning\">\n        <label for=\"firstName\">Phone</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"phone\" name=\"phone\" />\n      </div>\n      <button class=\"btn btn-outline-dark\" type=\"submit\">Edit Client</button>\n    </form>\n  </div>\n  <div *ngIf=\"!isEdit\">\n    <form (ngSubmit)=\"onAddSubmit()\" method=\"post\">\n      <h3>Add Client</h3>\n      <div class=\"form-group list-group-item list-group-item-info\">\n        <label for=\"firstName\">First Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"firstName\" name=\"firstName\" placeholder=\"Enter first name\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-info\">\n        <label for=\"lastName\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"lastName\" name=\"lastName\" placeholder=\"Enter last name\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-info\">\n        <label for=\"firstName\">Email</label>\n        <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Enter email\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-info\">\n        <label for=\"firstName\">Phone</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"phone\" name=\"phone\" placeholder=\"Enter phone number\" />\n      </div>\n      <button class=\"btn btn-outline-dark\" type=\"submit\">Add Client</button>\n    </form>\n  </div>\n</div>\n<div class=\"client-list\">\n  <table class=\"table table-stripped\">\n    <tr>\n      <th>First Name</th>\n      <th>Last Name</th>\n      <th>Email</th>\n      <th>Phone</th>\n      <th></th>\n      <th></th>\n    </tr>\n    <tr *ngFor=\"let client of clients\">\n      <td>{{client.firstName}}</td>\n      <td>{{client.lastName}}</td>\n      <td>{{client.email}}</td>\n      <td>{{client.phone}}</td>\n      <td><a (click)=\"onEdit(client)\" href=\"#\" class=\"btn btn-primary\">Edit</a></td>\n      <td><a (click)=\"onDelete(client._id)\" href=\"#\" class=\"btn btn-danger\">Delete</a></td>\n    </tr>\n  </table>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n})\n\nexport class NavbarComponent {\n\n  constructor(){ }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">Client Keeper</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Features</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class ClientService {\n\n  // httpOptions = {\n  //   header: new HttpHeaders({'Content-Type': 'application/json'}),\n  // };\n\n  constructor(private http: HttpClient){ }\n\n  getClients(){\n    return this.http.get('http://localhost:3000/api/clients')\n  }\n\n  saveClient(client){\n    return this.http.post('http://localhost:3000/api/clients', client);\n  }\n\n  updateClient(client){\n    return this.http.put(`http://localhost:3000/api/clients/${client._id}`, client);\n  }\n\n  deleteClient(id){\n    return this.http.delete(`http://localhost:3000/api/clients/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}