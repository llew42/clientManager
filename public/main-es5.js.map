{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/clients/clients.component.ts","webpack:///src/app/components/clients/clients.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/client.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","ClientsComponent","clientService","isEdit","getClients","subscribe","clients","console","log","newClient","firstName","lastName","email","phone","saveClient","client","push","updateClient","_id","i","length","splice","deleteClient","NavbarComponent","ClientService","http","get","post","put","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'ckfrontend';\n}\n","<navbar></navbar>\n<div class=\"container\">\n  <clients></clients>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { ClientService } from './services/client.service';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClientsComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ClientService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\n\n@Component({\n  selector: 'clients',\n  templateUrl: './clients.component.html',\n})\n\nexport class ClientsComponent implements OnInit {\n  clients;\n  _id;\n  firstName;\n  lastName;\n  email;\n  phone;\n  isEdit;\n  constructor(private clientService: ClientService){ }\n\n  ngOnInit(){\n    this.isEdit = false,\n    this.getClients();\n  }\n\n  getClients(): void {\n    this.clientService.getClients().subscribe(clients => {\n     this.clients = clients;\n    });\n  }\n\n  onAddSubmit(){\n    console.log('Submit clicked')\n    const newClient = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      phone: this.phone\n    }\n    this.clientService.saveClient(newClient).subscribe(client => {\n      this.clients.push(client);\n      this.firstName = '';\n      this.lastName = '';\n      this.email = '';\n      this.phone = '';\n    });\n  }\n\n  onEditSubmit(){\n    const updateClient = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      phone: this.phone,\n      _id: this._id\n    }\n\n    this.clientService.updateClient(updateClient).subscribe(client => {\n      console.log(\"The client is \", client);\n      for (let i = 0; i < this.clients.length; i++) {\n        if (updateClient._id === this.clients[i]._id) {\n          this.clients.splice(i, 1);\n        }\n      }\n      this.clients.push(client);\n      this.firstName = '';\n      this.lastName = '';\n      this.email = '';\n      this.phone = '';\n    });\n  }\n\n  onEdit(client){\n    this.isEdit = true;\n    this.firstName = client.firstName;\n    this.lastName = client.lastName;\n    this.email = client.email;\n    this.phone = client.phone;\n    this._id = client._id;\n  }\n\n  onDelete(id){\n    this.clientService.deleteClient(id).subscribe(client => {\n      for (let i = 0; i < this.clients.length; i ++) {\n        if (id === this.clients[i]._id){\n          this.clients.splice(i, 1);\n        }\n      }\n    })\n  }\n}\n","<div class=\"client-form\">\n  <div *ngIf=\"isEdit\">\n    <form (ngSubmit)=\"onEditSubmit()\" method=\"post\">\n      <h3>Edit Client</h3>\n      <div class=\"form-group list-group-item list-group-item-warning\">\n        <label for=\"firstName\">First Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"firstName\" name=\"firstName\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-warning\">\n        <label for=\"lastName\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"lastName\" name=\"lastName\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-warning\">\n        <label for=\"firstName\">Email</label>\n        <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-warning\">\n        <label for=\"firstName\">Phone</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"phone\" name=\"phone\" />\n      </div>\n      <button class=\"btn btn-outline-dark\" type=\"submit\">Edit Client</button>\n    </form>\n  </div>\n  <div *ngIf=\"!isEdit\">\n    <form (ngSubmit)=\"onAddSubmit()\" method=\"post\">\n      <h3>Add Client</h3>\n      <div class=\"form-group list-group-item list-group-item-info\">\n        <label for=\"firstName\">First Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"firstName\" name=\"firstName\" placeholder=\"Enter first name\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-info\">\n        <label for=\"lastName\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"lastName\" name=\"lastName\" placeholder=\"Enter last name\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-info\">\n        <label for=\"firstName\">Email</label>\n        <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Enter email\" />\n      </div>\n      <div class=\"form-group list-group-item list-group-item-info\">\n        <label for=\"firstName\">Phone</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"phone\" name=\"phone\" placeholder=\"Enter phone number\" />\n      </div>\n      <button class=\"btn btn-outline-dark\" type=\"submit\">Add Client</button>\n    </form>\n  </div>\n</div>\n<div class=\"client-list\">\n  <table class=\"table table-stripped\">\n    <tr>\n      <th>First Name</th>\n      <th>Last Name</th>\n      <th>Email</th>\n      <th>Phone</th>\n      <th></th>\n      <th></th>\n    </tr>\n    <tr *ngFor=\"let client of clients\">\n      <td>{{client.firstName}}</td>\n      <td>{{client.lastName}}</td>\n      <td>{{client.email}}</td>\n      <td>{{client.phone}}</td>\n      <td><a (click)=\"onEdit(client)\" href=\"#\" class=\"btn btn-primary\">Edit</a></td>\n      <td><a (click)=\"onDelete(client._id)\" href=\"#\" class=\"btn btn-danger\">Delete</a></td>\n    </tr>\n  </table>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n})\n\nexport class NavbarComponent {\n\n  constructor(){ }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">Client Keeper</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Features</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class ClientService {\n\n  // httpOptions = {\n  //   header: new HttpHeaders({'Content-Type': 'application/json'}),\n  // };\n\n  constructor(private http: HttpClient){ }\n\n  getClients(){\n    return this.http.get('http://localhost:3000/api/clients')\n  }\n\n  saveClient(client){\n    return this.http.post('http://localhost:3000/api/clients', client);\n  }\n\n  updateClient(client){\n    return this.http.put(`http://localhost:3000/api/clients/${client._id}`, client);\n  }\n\n  deleteClient(id){\n    return this.http.delete(`http://localhost:3000/api/clients/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}